newdata2$trim <- trim
newdata2 <- newdata2[-which(newdata2$trim == 1), ]
y_max2 <- numeric()
data2 <- data
data21 <- data2[order(data2$x, decreasing = TRUE), ]
for (i in unique(na.omit(data21$x))) {
y_max2[which(unique(na.omit(data21$x)) == i)] <- max(data21$y[which(data21$x == i)])
}
newdata3 <- data.frame(x = unique(na.omit(data21$x)), y_max2)
bound2 <- newdata3$y_max2
for (i in 1:length(bound2)) {
bound2[i] <- max(bound2[i], max(newdata3$y_max2[1:i]))
}
newdata4 <- data.frame(x = unique(na.omit(data21$x)), y = bound2)
trim2 <- newdata4$y
dummy2 <- c(min(newdata4$y) * 10, newdata4$y)
for (i in 1:length(newdata4$y)) {
trim2[i] <- newdata4$y[i] == dummy2[i]
}
newdata4$trim <- trim2
newdata4 <- newdata4[-which(newdata4$trim == 1), ]
newdata6 <- data.frame(x = c(newdata2$x, newdata4$x), y = c(newdata2$y, newdata4$y))
if (plot == TRUE) {
plot(x, y, ...)
points(newdata6$x, newdata6$y, col = bp_col, pch = bp_pch)
}
bound <- newdata6
L <- xmin
U <- xmax
if (L < min(bound$x)) stop("The set minimum limit is less than the minimum of bounding points")
if (U > max(bound$x)) stop("The set maximum limit is greater than the maximum of bounding points")
bound2 <- if (L == min(bound$x)) bound else bound[-which(bound$x < L), ]
newdata5 <- if (U == max(bound2$x)) bound2 else bound2[-which(bound2$x > U), ]
if (model == "explore") {
if (plot == TRUE) {
plot(x, y, ...)
points(newdata6$x, newdata6$y, col = bp_col, pch = bp_pch)
}
return(summary(newdata6))
}
# Example for linear model with optim
if (model == "blm") {
trap <- function(x, ar, br) ar + br * x
rss <- function(start, x, y) {
ar <- start[1]; br <- start[2]
sum((y - (ar + br * x))^2) / length(x)
}
parscale <- function(a, x, y) {
eps <- 1e-4
nr <- length(a)
part <- numeric(nr)
for (i in 1:nr) {
del <- rep(0, nr)
del[i] <- eps
part[i] <- (rss(a + del, x, y) - rss(a, x, y)) / eps
}
scale <- 1 / pmax(abs(part), 1e-6)
pmin(scale, 1e4)
}
ooo <- optim(start, rss, x = newdata5$x, y = newdata5$y, method = optim.method)
scale <- parscale(ooo$par, x = newdata5$x, y = newdata5$y)
oo <- optim(ooo$par, rss, x = newdata5$x, y = newdata5$y, method = optim.method, control = list(parscale = scale))
arf <- oo$par[1]; brf <- oo$par[2]
if (plot == TRUE) {
xfine <- seq(min(x), max(x), length.out = line_smooth)
yfit <- arf + brf * xfine
lines(xfine, yfit, col = bl_col, lwd = lwd)
}
estimates <- matrix(c(arf, brf), ncol = 1, dimnames = list(c("β₁", "β₂"), "Estimate"))
RMS <- oo$value
Equation <- noquote("y = β₁ + β₂x")
Parameters <- list(Model = BLMod, Equation = Equation, Parameters = estimates, RMS = RMS, Boundary_points = newdata6)
class(Parameters) <- "wm"
return(Parameters)
}
ooo <- optim(start, rss, x = newdata5$x, y = newdata5$y, method = optim.method)
scale <- parscale(ooo$par, x = newdata5$x, y = newdata5$y)
oo <- optim(ooo$par, rss, x = newdata5$x, y = newdata5$y, method = optim.method, control = list(parscale = scale))
arf <- oo$par[1]; brf <- oo$par[2]
if (plot == TRUE) {
xfine <- seq(min(x), max(x), length.out = line_smooth)
yfit <- arf + brf * xfine
lines(xfine, yfit, col = bl_col, lwd = lwd)
}
estimates <- matrix(c(arf, brf), ncol = 1, dimnames = list(c("\u03B2\u2081", "\u03B2\u2082"), "Estimate"))
RMS <- oo$value
Equation <- noquote("y = \u03B2\u2081 + \u03B2\u2082x")
Parameters <- list(Model = BLMod, Equation = Equation, Parameters = estimates, RMS = RMS, Boundary_points = newdata6)
class(Parameters) <- "wm"
return(Parameters)
}
# Linear plateau model
if (model == "lp") {
rss <- function(start, x, y) {
ar <- start[1]; br <- start[2]; ym <- start[3]
yfit <- ifelse(ar + br * x > ym, ym, ar + br * x)
sum((y - yfit)^2) / length(x)
}
parscale <- function(a, x, y) {
eps <- 1e-4
nr <- length(a)
part <- numeric(nr)
for (i in 1:nr) {
del <- rep(0, nr)
del[i] <- eps
part[i] <- (rss(a + del, x, y) - rss(a, x, y)) / eps
}
scale <- 1 / pmax(abs(part), 1e-6)
pmin(scale, 1e4)
}
ooo <- optim(start, rss, x = newdata5$x, y = newdata5$y, method = optim.method)
scale <- parscale(ooo$par, x = newdata5$x, y = newdata5$y)
oo <- optim(ooo$par, rss, x = newdata5$x, y = newdata5$y, method = optim.method, control = list(parscale = scale))
ar <- oo$par[1]; br <- oo$par[2]; ym <- oo$par[3]
if (plot == TRUE) {
xfine <- seq(min(x), max(x), length.out = line_smooth)
yfit <- ifelse(ar + br * xfine > ym, ym, ar + br * xfine)
lines(xfine, yfit, col = bl_col, lwd = lwd)
}
estimates <- matrix(c(ar, br, ym), ncol = 1, dimnames = list(c("β₁", "β₂", "β₀"), "Estimate"))
RMS <- oo$value
Equation <- noquote("y = min (β₁ + β₂x, β₀)")
Parameters <- list(Model = BLMod, Equation = Equation, Parameters = estimates, RMS = RMS, Boundary_points = newdata6)
class(Parameters) <- "wm"
return(Parameters)
}
stop("Model not recognized or not implemented in this version.")
}
setwd("C:/Users/stxcm28/OneDrive - The University of Nottingham/PhD_works_2022/Nottingham PhD/PhD works/Papers_development/Paper 2_Comparisons/2024/BL_Comparison_2024/3. Maize/linear_plateau")
######### Reading in data
data<-read.csv("Ethiopia_edited.csv")
head(data)
names(data)
data<-data[which(data$Treatment=="Control"),] # only plots without fertilizer treatment
nobs<-nrow(data)
write.csv(data, "maize.csv", row.names = F)
summastat(data$N)
library(BLA)
summastat(data$N)
summastat(data$Yield_kg_ha)
bolides(x,y,model = "explore")
x<-data$N
y<-data$Yield_kg_ha
bolides(x,y,model = "explore")
x<-data$K
y<-data$Yield_kg_ha
bolides(x,y,model = "explore")
summastat(data$K)
summastat(log(data$Yield_kg_ha))
bolides(x,log(y),model = "explore")
summastat(log(data$Yield))
x<-data$K
y<-data$Yield_kg_ha
bolides(x,log(y),model = "explore")
bolides(x,y,model = "explore")
x<-data$K
y<-data$Yield_kg_ha
bolides(x,y,model = "explore")
rnorm(20,2,1)
rnorm(20,2,0.5)
rnorm(20,2,0.7)
rnorm(20,2,0.7)
rnorm(20,2,0.7)
rnorm(20,2,0.7)
rnorm(20,2,0.7)
setwd("C:/Users/stxcm28/OneDrive - The University of Nottingham/Desktop/BLA_NETHERLAND_Rothamsted")
data <- read.csv("data.csv")
summastat(data$K)
data <- read.csv("maize.csv")
summastat(data$K)
head(data)
y<-data$Yield
bolides(x,y,model = "explore")
x<-data$K
y<-data$Yield
bolides(x,y,model = "explore")
data <- read.csv("maize.csv")
head(data)
x<-data$K
y<-data$Yield
bolides(x,y,model = "explore")
data <- read.csv("maize.csv")
head(data)
summastat(data$K)
summastat(log(data$Yield))
x<-data$K
y<-data$Yield
bolides(x,y,model = "explore")
data <- read.csv("maize.csv")
x<-data$K
y<-data$Yield
bolides(x,y,model = "explore")
bolides(x,y,model = "explore", pch=16)
head(data)
plot(data$N, data$Yield)
N <- rnorm(35,0.22,0.1)
set.seed(123)
set.seed(123)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:83,]
data$N[48:83]
data$N[48:82]
data$N[48:82] <- rnorm(35,0.22,0.1)
data$N[103:148]
data$N[103:148] <- rnorm(46,0.22,0.1)
data$N
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
summastat(data$N)
bolides(x,y,model = "explore", pch=16)
set.seed(122)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- rnorm(35,0.22,0.1)
set.seed(122)
data$N[103:148] <- rnorm(46,0.22,0.1)
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
abs(-1)
set.seed(122)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
summastat(data$N)
bolides(x,y,model = "explore", pch=16)
x<-data$K
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
locator(1)
locator(1)
bag(data.frame(data$N, data$Yield))
bagplot(data.frame(data$N, data$Yield))
library(aplpack)
bagplot(data.frame(data$N, data$Yield))
bolides(x,y,model = "explore", pch=16)
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
View(data)
data <- read.csv("maize.csv")
head(data)
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(122)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
locator(1)
x<-data$K
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
locator(1)
locator(1)
locator(1)
data <- read.csv("maize.csv")
x<-data$K
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
data <- read.csv("maize.csv")
set.seed(122)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(122)
N <- rnorm(35,0.22,0.1)
#soil N
set.seed(122)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(122)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(122)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(123)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(124)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
set.seed(125)
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(126) # 125 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(127) # 125 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(128) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(129) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(100) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(101) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(102) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(106) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(16) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
#soil N
set.seed(127) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
x<-data$Meh_P
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
x<-data$pH
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
locator(1)
locator(1)
<
data <- read.csv("maize.csv")
x<-data$pH
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
locator(1)
locator(1)
data <- read.csv("maize.csv")
x<-data$pH
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
bolides(x,y,model = "explore", pch=16, xlab="pH")
bolides(data$pH,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
data <- read.csv("maize.csv")
# 1. soil N
set.seed(127) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
bolides(data$K,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
bolides(data$K,data$Yield,model = "explore", pch=16, xlab="K", ylab="yield")
bolides(data$N,data$Yield,model = "explore", pch=16, xlab="N", ylab="yield")
bolides(data$pH,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
bolides(data$ECEC,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
bolides(data$Exch_Acidity,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
bolides(data$pH,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
data <- read.csv("maize.csv")
set.seed(127) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
bolides(data$K,data$Yield,model = "explore", pch=16, xlab="K", ylab="yield")
bolides(data$N,data$Yield,model = "explore", pch=16, xlab="N", ylab="yield")
bolides(data$pH,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
data <- read.csv("maize.csv")
set.seed(127) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
bolides(data$K,data$Yield,model = "explore", pch=16, xlab="K", ylab="yield")
bolides(data$N,data$Yield,model = "explore", pch=16, xlab="N", ylab="yield")
bolides(data$pH,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
data <- read.csv("maize.csv")
set.seed(127) # 125 and 127 is good
N <- rnorm(35,0.22,0.1)
N2 <-  rnorm(45,0.22,0.1)
data$N[48:82] <- abs(rnorm(35,0.22,0.1))
data$N[103:148] <- abs(rnorm(46,0.22,0.1))
x<-data$N
y<-data$Yield
bolides(x,y,model = "explore", pch=16)
# 2. Soil P
x<-data$pH
y<-data$Yield
#expl.boundary(x,y,10,100) # may take a bit more time to run.
# 4. Fitting boundary model to the data using the Binning methodology. The function
#    BOLIDES() will be used. For more information on the function run ?BOLIDES()
bolides(x,y,model = "explore", pch=16, xlab="pH")
## All plots
bolides(data$K,data$Yield,model = "explore", pch=16, xlab="K", ylab="yield")
bolides(data$N,data$Yield,model = "explore", pch=16, xlab="N", ylab="yield")
bolides(data$pH,data$Yield,model = "explore", pch=16, xlab="pH", ylab="yield")
166:181
##adding some random values for K, pH and N
set.seed(123)
data$N[166:180] <- abs(rnorm(15,0.4,0.1))
##adding some random values for K, pH and N
set.seed(123)
data$N <- c(data$N,abs(rnorm(15,0.4,0.1)))
abs(rnorm(15,0.4,0.1))
data$N
c(data$N,abs(rnorm(15,0.4,0.1)))
data$N <- c(data$N,abs(rnorm(15,0.4,0.1)))
